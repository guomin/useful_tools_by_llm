# This workflow will build the target file in a Windows environment by executing a specific script
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application - Windows Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号'
        required: true
        default: 'v0.0.1.21'
        
permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Set Environment Variables
        run: |
          echo "PYTHONIOENCODING=utf-8" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          cd pdf_tools
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build target file
        run: |
          cd pdf_tools
          python build_exe.py
      - name: Verify EXE file exists
        shell: pwsh
        run: |
          Write-Host "Current directory contents:"
          Get-ChildItem -Path .

          Write-Host "`npdf_tools/dist/ directory contents:"
          Get-ChildItem -Path "pdf_tools/dist/"

          
          if (!(Test-Path -Path "pdf_tools/dist/PDF工具_${{ env.VERSION }}.exe")) {
            Write-Host "Error: File not found!"
            exit 1
          }
      - name: Upload EXE as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF工具_${{ env.VERSION }}.exe
          path: pdf_tools/dist/PDF工具_${{ env.VERSION }}.exe  # 修改为生成的 EXE 文件路径

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}  # 替换为实际的版本号
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pdf_tools/dist/PDF工具_${{ env.VERSION }}.exe  # 修改为生成的 EXE 文件路径
          asset_name: PDF_Tools_${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
