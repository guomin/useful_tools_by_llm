# This workflow will build the target file in a Windows environment by executing a specific script
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application - Windows Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Set Environment Variables
        run: |
          echo "PYTHONIOENCODING=utf-8" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          cd pdf_tools
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build target file
        run: |
          cd pdf_tools
          python build_exe.py
      - name: Upload EXE as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-tool-exe
          path: pdf_tools/dist/PDF工具_v0.0.1.21.exe  # 修改为生成的 EXE 文件路径

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v0.0.1.21  # 替换为实际的版本号
          release_name: Release v0.0.1.21
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pdf_tools/dist/PDF工具_v0.0.1.21.exe  # 修改为生成的 EXE 文件路径
          asset_name: PDF工具_v0.0.1.21.exe
          asset_content_type: application/octet-stream
